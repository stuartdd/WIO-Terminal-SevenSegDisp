#include "TFT_eSPI.h"
/*
Relative offsets for each segment led (image).
*/
#define SEG_M_1_X 18
#define SEG_M_1_Y 0
#define SEG_M_2_X 51
#define SEG_M_2_Y 3
#define SEG_M_3_X 43
#define SEG_M_3_Y 51
#define SEG_M_4_X 4
#define SEG_M_4_Y 91
#define SEG_M_5_X 0
#define SEG_M_5_Y 51
#define SEG_M_6_X 8
#define SEG_M_6_Y 3
#define SEG_M_7_X 12
#define SEG_M_7_Y 45
#define SEG_M_8_X 22
#define SEG_M_8_Y 27

/*
sevenSegmentMap must be defined only ONCE
*/
#ifndef SEVEN_SEG_MAP_CPP__
#define SEVEN_SEG_MAP_CPP__
/*
   ---0x01---
   |        |
   0x20  0x02
   |        |
   ---0x40---
   |        |
   0x10  0x04  Each segnent has a BIT in the array to define an ON (lit) value.
   |        |
   ---0x08---  sevenSegmentMap defines the bits for each number 0..9 A..F
*/
const unsigned int sevenSegmentMap[] = {0x3F, 0x06, 0x5B, 0x4f, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x58, 0x5E, 0x79, 0x71};
#define SEVEN_SEG_MAP_MAX 16
#define SEVEN_SEG_MAP_ERR 0x40
#endif

#define SEG_M_1_width 46
#define SEG_M_1_height 9
const unsigned char SEG_M_1_bits[] = {
    0xfc, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x1f,
    0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x1f,
    0xfc, 0xff, 0xff, 0xff, 0xff, 0x0f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07,
    0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x01,
    0xc0, 0x01, 0x00, 0x00, 0xe0, 0x00};

#define SEG_M_2_width 17
#define SEG_M_2_height 46
const unsigned char SEG_M_2_bits[] = {
    0x00, 0x20, 0x00, 0x00, 0x70, 0x00, 0x00, 0xf8, 0x00, 0x00, 0xfc, 0x01,
    0x00, 0xfe, 0x01, 0x00, 0xff, 0x01, 0x80, 0xff, 0x00, 0x80, 0xff, 0x00,
    0x80, 0xff, 0x00, 0x80, 0xff, 0x00, 0x80, 0xff, 0x00, 0xc0, 0x7f, 0x00,
    0xc0, 0x7f, 0x00, 0xc0, 0x7f, 0x00, 0xc0, 0x7f, 0x00, 0xe0, 0x7f, 0x00,
    0xe0, 0x7f, 0x00, 0xe0, 0x3f, 0x00, 0xe0, 0x3f, 0x00, 0xe0, 0x3f, 0x00,
    0xf0, 0x3f, 0x00, 0xf0, 0x3f, 0x00, 0xf0, 0x1f, 0x00, 0xf0, 0x1f, 0x00,
    0xf0, 0x0f, 0x00, 0xf8, 0x0f, 0x00, 0xf8, 0x0f, 0x00, 0xf8, 0x0f, 0x00,
    0xf8, 0x07, 0x00, 0xf8, 0x07, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00,
    0xfc, 0x07, 0x00, 0xfc, 0x03, 0x00, 0xfe, 0x03, 0x00, 0xfe, 0x03, 0x00,
    0xfe, 0x03, 0x00, 0xfe, 0x01, 0x00, 0xfe, 0x01, 0x00, 0xff, 0x01, 0x00,
    0xff, 0x01, 0x00, 0xff, 0x01, 0x00, 0xfe, 0x00, 0x00, 0x7c, 0x00, 0x00,
    0x38, 0x00, 0x00, 0x10, 0x00, 0x00};

#define SEG_M_3_width 16
#define SEG_M_3_height 46
const unsigned char SEG_M_3_bits[] = {
    0x00, 0x10, 0x00, 0x38, 0x00, 0x7c, 0x00, 0xfe, 0x00, 0xff, 0x80, 0xff,
    0x80, 0xff, 0x80, 0xff, 0x80, 0xff, 0xc0, 0xff, 0xc0, 0x7f, 0xc0, 0x7f,
    0xc0, 0x7f, 0xe0, 0x7f, 0xe0, 0x7f, 0xe0, 0x3f, 0xe0, 0x3f, 0xe0, 0x3f,
    0xe0, 0x3f, 0xf0, 0x3f, 0xf0, 0x3f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f,
    0xf8, 0x1f, 0xf8, 0x1f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xfc, 0x0f,
    0xfc, 0x0f, 0xfc, 0x0f, 0xfc, 0x07, 0xfc, 0x07, 0xfe, 0x07, 0xfe, 0x07,
    0xfe, 0x07, 0xfe, 0x03, 0xff, 0x03, 0xff, 0x03, 0xfe, 0x03, 0xfc, 0x03,
    0xf8, 0x03, 0xf0, 0x01, 0xe0, 0x00, 0x40, 0x00};

#define SEG_M_4_width 45
#define SEG_M_4_height 9
const unsigned char SEG_M_4_bits[] = {
    0xc0, 0x01, 0x00, 0x00, 0x70, 0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x00,
    0xf0, 0xff, 0xff, 0xff, 0xff, 0x01, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x03,
    0xfc, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x0f,
    0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x0f,
    0xfc, 0xff, 0xff, 0xff, 0xff, 0x07};

#define SEG_M_5_width 16
#define SEG_M_5_height 46
const unsigned char SEG_M_5_bits[] = {
    0x00, 0x08, 0x00, 0x1c, 0x00, 0x3e, 0x00, 0x7f, 0x80, 0xff, 0x80, 0xff,
    0x80, 0xff, 0x80, 0x7f, 0xc0, 0x7f, 0xc0, 0x7f, 0xc0, 0x7f, 0xc0, 0x7f,
    0xc0, 0x7f, 0xc0, 0x3f, 0xe0, 0x3f, 0xe0, 0x3f, 0xe0, 0x3f, 0xe0, 0x3f,
    0xe0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f,
    0xf0, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f,
    0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x07, 0xfe, 0x07,
    0xfe, 0x03, 0xfe, 0x03, 0xff, 0x03, 0xff, 0x03, 0xff, 0x01, 0xff, 0x00,
    0x7f, 0x00, 0x3e, 0x00, 0x1c, 0x00, 0x08, 0x00};

#define SEG_M_6_width 15
#define SEG_M_6_height 46
const unsigned char SEG_M_6_bits[] = {
    0x00, 0x02, 0x00, 0x07, 0x80, 0x0f, 0xc0, 0x1f, 0xc0, 0x3f, 0xc0, 0x7f,
    0xc0, 0x7f, 0xe0, 0x7f, 0xe0, 0x7f, 0xe0, 0x7f, 0xe0, 0x3f, 0xe0, 0x3f,
    0xe0, 0x3f, 0xf0, 0x3f, 0xf0, 0x3f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f,
    0xf0, 0x1f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f,
    0xf8, 0x07, 0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x07,
    0xfc, 0x07, 0xfe, 0x03, 0xfe, 0x03, 0xfe, 0x03, 0xfe, 0x03, 0xfe, 0x03,
    0xfe, 0x03, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 0xff, 0x00,
    0x7f, 0x00, 0x3e, 0x00, 0x1c, 0x00, 0x08, 0x00};

#define SEG_M_7_width 43
#define SEG_M_7_height 10
const unsigned char SEG_M_7_bits[] = {
    0x70, 0x00, 0x00, 0x00, 0x70, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x00,
    0xfc, 0xff, 0xff, 0xff, 0xff, 0x01, 0xfe, 0xff, 0xff, 0xff, 0xff, 0x03,
    0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07,
    0xfe, 0xff, 0xff, 0xff, 0xff, 0x03, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x01,
    0xf8, 0xff, 0xff, 0xff, 0xff, 0x00, 0x70, 0x00, 0x00, 0x00, 0x70, 0x00};

#define SEG_M_8_width 17
#define SEG_M_8_height 55
const unsigned char SEG_M_8_bits[] = {
    0x00, 0x3c, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xff, 0x00, 0x80, 0xff, 0x01,
    0x80, 0xff, 0x01, 0x80, 0xff, 0x01, 0x80, 0xff, 0x01, 0x80, 0xff, 0x01,
    0x00, 0xff, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0xfe, 0x01, 0x00, 0xfe, 0x03, 0x00,
    0xff, 0x07, 0x00, 0xff, 0x07, 0x00, 0xff, 0x07, 0x00, 0xff, 0x07, 0x00,
    0xfe, 0x03, 0x00, 0xfe, 0x01, 0x00, 0xfc, 0x00, 0x00};

#define SEGMENT_COUNT 5
#define SEGMENT_UNDEFINED -2
#define SEGMENT_UPDATE -1
#define SEGMENT_DEFAULT 0
#define SEGMENT_WIDTH 54
#define SEGMENT_ALL_OFF 127
#define SEGMENT_COLON_ON 128
#define SEGMENT_COLON_OFF 129

class SegmentDisplayMedium {
private:
    int fgColor = TFT_BLACK;
    int bgColor = TFT_GREEN;
    int xPos = 0;
    int yPos = 0;
    void drawSegmentInternal(int mask);

public:
    SegmentDisplayMedium();
    ~SegmentDisplayMedium();
    void init(TFT_eSPI tft, int x, int y, int fg, int bg);
    void drawSegment(int value);

    TFT_eSPI getTFT();
    int getFgColor();
    int getBgColor();
    int getXPos();
    int getYPos();

    void setTFT(TFT_eSPI tft);
    int setFgColor(int color);
    int setBgColor(int color);
    void setPosition(int x, int y);
};

class ClockDisplayMedium {
private:
    int values[SEGMENT_COUNT];
    int currentValues[SEGMENT_COUNT];
    SegmentDisplayMedium segments[SEGMENT_COUNT];
    int digits = 0;
    int digitOffset = 0;

public:
    ClockDisplayMedium();
    ~ClockDisplayMedium();
    void init(TFT_eSPI tft, int x, int y, int fg, int bg, int digitCount, const int digitOffset[]);
    void setTFT(TFT_eSPI tft);
    TFT_eSPI getTFT();
    int update();
    void setValue(int pos, int val);
    int getValue(int pos);
    bool setColon(int pos, bool val);
};