#include "TFT_eSPI.h"
/*
Relative offsets for each segment led (image).
*/
#define SEG_S_1_X 16
#define SEG_S_1_Y 0
#define SEG_S_2_X 38
#define SEG_S_2_Y 2
#define SEG_S_3_X 31
#define SEG_S_3_Y 40
#define SEG_S_4_X 4
#define SEG_S_4_Y 70
#define SEG_S_5_X 0
#define SEG_S_5_Y 40
#define SEG_S_6_X 7
#define SEG_S_6_Y 2
#define SEG_S_7_X 10
#define SEG_S_7_Y 34
#define SEG_S_8_X 16
#define SEG_S_8_Y 18

/*
sevenSegmentMap must be defined only ONCE
*/
#ifndef SEVEN_SEG_MAP_CPP__
#define SEVEN_SEG_MAP_CPP__
/*
   ---0x01---
   |        |
   0x20  0x02
   |        |
   ---0x40---
   |        |
   0x10  0x04  Each segnent has a BIT in the array to define an ON (lit) value.
   |        |
   ---0x08---  sevenSegmentMap defines the bits for each number 0..9 A..F
*/
const unsigned int sevenSegmentMap[] = {0x3F, 0x06, 0x5B, 0x4f, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x77, 0x7C, 0x58, 0x5E, 0x79, 0x71};
#define SEVEN_SEG_MAP_MAX 16
#define SEVEN_SEG_MAP_ERR 0x40
#endif

#define SEG_S_1_width 32
#define SEG_S_1_height 8
const unsigned char SEG_S_1_bits[] = {
    0xfe, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xfe, 0xff, 0xff, 0x7f, 0xfc, 0xff, 0xff, 0x3f, 0xf8, 0xff, 0xff, 0x1f,
    0xf0, 0x03, 0xc0, 0x0f, 0xe0, 0x00, 0x00, 0x07};

#define SEG_S_2_width 14
#define SEG_S_2_height 36
const unsigned char SEG_S_2_bits[] = {
    0x00, 0x08, 0x00, 0x1c, 0x00, 0x3e, 0x00, 0x3f, 0x80, 0x3f, 0xc0, 0x1f,
    0xe0, 0x1f, 0xe0, 0x1f, 0xe0, 0x1f, 0xe0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f,
    0xf0, 0x0f, 0xf0, 0x0f, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x07,
    0xfc, 0x07, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03, 0xfe, 0x03,
    0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01, 0xff, 0x01, 0xff, 0x00,
    0xff, 0x00, 0xff, 0x00, 0x7f, 0x00, 0x3e, 0x00, 0x1c, 0x00, 0x08, 0x00};

#define SEG_S_3_width 13
#define SEG_S_3_height 36
const unsigned char SEG_S_3_bits[] = {
    0x00, 0x04, 0x00, 0x0e, 0x00, 0x1f, 0x80, 0x1f, 0xc0, 0x1f, 0xe0, 0x1f,
    0xe0, 0x1f, 0xe0, 0x1f, 0xe0, 0x1f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f,
    0xf0, 0x0f, 0xf8, 0x0f, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x07,
    0xfc, 0x07, 0xfc, 0x07, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03,
    0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x00, 0xfe, 0x00,
    0xff, 0x00, 0xfe, 0x00, 0xfc, 0x00, 0xf8, 0x00, 0x70, 0x00, 0x20, 0x00};

#define SEG_S_4_width 31
#define SEG_S_4_height 8
const unsigned char SEG_S_4_bits[] = {
    0xe0, 0x00, 0x80, 0x03, 0xf0, 0x03, 0xe0, 0x07, 0xf8, 0xff, 0xff, 0x0f,
    0xfc, 0xff, 0xff, 0x1f, 0xfe, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x7f,
    0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xff, 0x1f};

#define SEG_S_5_width 14
#define SEG_S_5_height 36
const unsigned char SEG_S_5_bits[] = {
    0x00, 0x02, 0x00, 0x07, 0x80, 0x0f, 0xc0, 0x1f, 0xe0, 0x3f, 0xe0, 0x3f,
    0xe0, 0x1f, 0xe0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x1f, 0xf0, 0x0f,
    0xf0, 0x0f, 0xf0, 0x0f, 0xf8, 0x0f, 0xf8, 0x0f, 0xf8, 0x07, 0xf8, 0x07,
    0xf8, 0x07, 0xf8, 0x07, 0xfc, 0x07, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03,
    0xfc, 0x03, 0xfc, 0x03, 0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01,
    0xfe, 0x00, 0x7f, 0x00, 0x3f, 0x00, 0x1f, 0x00, 0x0e, 0x00, 0x04, 0x00};

#define SEG_S_6_width 13
#define SEG_S_6_height 36
const unsigned char SEG_S_6_bits[] = {
    0x80, 0x00, 0xc0, 0x01, 0xe0, 0x03, 0xe0, 0x07, 0xe0, 0x0f, 0xe0, 0x1f,
    0xe0, 0x1f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f, 0xf0, 0x0f,
    0xf0, 0x07, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x07, 0xf8, 0x03,
    0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x03, 0xfc, 0x01, 0xfc, 0x01,
    0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x01, 0xfe, 0x00, 0xfe, 0x00, 0xfe, 0x00,
    0xff, 0x00, 0x7f, 0x00, 0x3f, 0x00, 0x1f, 0x00, 0x0e, 0x00, 0x04, 0x00};

#define SEG_S_7_width 31
#define SEG_S_7_height 10
const unsigned char SEG_S_7_bits[] = {
    0x70, 0x00, 0x00, 0x07, 0xf8, 0x01, 0xc0, 0x0f, 0xfc, 0xff, 0xff, 0x1f,
    0xfe, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f,
    0xfe, 0xff, 0xff, 0x3f, 0xfc, 0xff, 0xff, 0x1f, 0xf8, 0x01, 0xc0, 0x0f,
    0x70, 0x00, 0x00, 0x07};

#define SEG_S_8_width 15
#define SEG_S_8_height 44
const unsigned char SEG_S_8_bits[] = {
    0x00, 0x1f, 0x80, 0x3f, 0xc0, 0x7f, 0xc0, 0x7f, 0xc0, 0x7f, 0xc0, 0x7f,
    0x80, 0x3f, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7c, 0x00, 0xfe, 0x00, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01, 0xff, 0x01,
    0xfe, 0x00, 0x7c, 0x00};

void drawSegmentSmall(TFT_eSPI tft, int x, int y, int value, int fg, int bg);
void drawColonSmall(TFT_eSPI tft, int x, int y, bool value, int fg, int bg);
#define SEGMENT_COUNT 5
#define SEGMENT_UNDEFINED -2
#define SEGMENT_UPDATE -1
#define SEGMENT_DEFAULT 0
#define SEGMENT_WIDTH 41
#define SEGMENT_ALL_OFF 127
#define SEGMENT_COLON_ON 128
#define SEGMENT_COLON_OFF 129

class SegmentDisplaySmall {
private:
    int fgColor = TFT_BLACK;
    int bgColor = TFT_GREEN;
    int xPos = 0;
    int yPos = 0;
    void drawSegmentInternal(int mask);

public:
    SegmentDisplaySmall();
    ~SegmentDisplaySmall();
    void init(TFT_eSPI tft, int x, int y, int fg, int bg);
    void drawSegment(int value);

    TFT_eSPI getTFT();
    int getFgColor();
    int getBgColor();
    int getXPos();
    int getYPos();

    void setTFT(TFT_eSPI tft);
    int setFgColor(int color);
    int setBgColor(int color);
    void setPosition(int x, int y);
};

class ClockDisplaySmall {
private:
    int values[SEGMENT_COUNT];
    int currentValues[SEGMENT_COUNT];
    SegmentDisplaySmall segments[SEGMENT_COUNT];
    int digits = 0;
    int digitOffset = 0;

public:
    ClockDisplaySmall();
    ~ClockDisplaySmall();
    void init(TFT_eSPI tft, int x, int y, int fg, int bg, int digitCount, const int digitOffset[]);
    void setTFT(TFT_eSPI tft);
    TFT_eSPI getTFT();
    int update();
    void setValue(int pos, int val);
    int getValue(int pos);
    bool setColon(int pos, bool val);
};